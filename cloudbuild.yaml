# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# [START cloudbuild_microservice_demo_cloudbuild]

# This configuration file is used to build and deploy the app into a
# GKE cluster using Google Cloud Build.
#
# PREREQUISITES:
# - Cloud Build service account must have role: "Kubernetes Engine Developer"

# USAGE:
# GCP zone and GKE target cluster must be specified as substitutions
# Example invocation:
# `gcloud builds submit --config=cloudbuild.yaml --substitutions=_ZONE=us-central1-b,_CLUSTER=demo-app-staging .`

steps:
- id: 'Deploy application to cluster'
  name: 'gcr.io/k8s-skaffold/skaffold:v1.36.0'
  entrypoint: 'bash'
  args:
  - '-c'
  - >
    gcloud container clusters get-credentials gke-boutique-cluster --region europe-north1 --project team-2-a;
    curl https://storage.googleapis.com/csm-artifacts/asm/asmcli_1.12 > asmcli
    chmod +x asmcli
    ./asmcli install \
    --project_id $_PROJECT_ID \
    --cluster_name $_NAME \
    --cluster_location $_ZONE \
    --fleet_id $_PROJECT_ID \
    --output_dir ./asm_output \
    --enable_all \
    --ca mesh_ca \
    --enable_gcp_components
    kubectl create namespace istio-gateway
    kubectl get deploy -n istio-system -l app=istiod -o \
    jsonpath={.items[*].metadata.labels.'istio\.io\/rev'}'{"\n"}'  

    REVISION=$(kubectl get deploy -n istio-system -l app=istiod -o \
    jsonpath={.items[*].metadata.labels.'istio\.io\/rev'}'{"\n"}')

    kubectl label namespace istio-gateway \
    istio.io/rev=$REVISION --overwrite

    cd ~/asm_output
    kubectl apply -n istio-gateway \
    -f samples/gateways/istio-ingressgateway

    kubectl label namespace development istio-injection- istio.io/rev=$REVISION --overwrite

    kubectl config set-context --current --namespace=development
    skaffold run -p gcb --default-repo=gcr.io/team-2-a;


- id: 'create ingress'
  name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  args: ['./bash.sh']
    
# Add more power, and more time, for heavy Skaffold build
options:
  machineType: 'E2_HIGHCPU_32'

# Add more power, and more time, for heavy Skaffold build
timeout: '6000s'

# [END cloudbuild_microservice_demo_cloudbuild]

#  gcloud container clusters get-credentials $_NAME --region=_REGION --project=$_PROJECT_ID;
#  gcloud container clusters get-credentials --zone=$_ZONE $_CLUSTER;
#  skaffold run -f=skaffold.yaml --default-repo=gcr.io/team-2-a;

#correct
#gcloud container clusters get-credentials gke-boutique-cluster --region europe-north1 --project team-2-a;
#skaffold run -p gcb --default-repo=gcr.io/team-2-a;